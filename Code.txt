package controle;
public class controle {
	

}
class Mot{
	private String mot;
	public String getMot() {
		return mot;
	}
	public Mot(String mot) {
		this.mot = mot ;
		
	}
	public String rechercherTraduction(int langueIndex) {
        return "Méthode non applicable pour ce type de mot.";
    }
	public void afficherTraductions() {
        System.out.println("Pas de traduction disponible.");
    }
	
}

class MotSimple extends Mot{
	private String[] traduction;
	public MotSimple(String mot,String[] traduction) {
		super(mot);
		this.traduction = traduction ;
	}
	public String rechercherTraduction(int langueIndex) {
        if (langueIndex >= 0 && langueIndex < traduction.length) {
            return traduction[langueIndex];
        } else {
            return "Langue non disponible";
        }
    }
	public void afficherTraductions() {
        System.out.println("Traductions : " + String.join(", ", traduction));
    }
}

class MotTechnique extends Mot{   //un mot peut avoir plusieurs significations dans la meme langue
	private String[][] traduction;
	public MotTechnique(String mot,String[][] traduction) {
		super(mot);
		this.traduction = traduction;
	}
	public String[][] getTraduction() {
        return traduction;
    }
	public String rechercherTraduction(int langueIndex) {
        if (langueIndex >= 0 && langueIndex < traduction.length) {
            return String.join(", ", traduction[langueIndex]);
        } else {
            return "Langue non disponible";
        }
    }
	public void afficherTraductions() {
        for (int i = 0; i < traduction.length; i++) {
            System.out.println("Traduction " + (i + 1) + " : " + String.join(", ", traduction[i]));
        }
    }
}

class Dictionnaire {
	private Mot[] mots;
	private int taille;
	public Dictionnaire() {
		this.mots = new Mot[10] ;
		this.taille = 0 ;
	}
	
	

	

	
	
	public void ajouterMot(String mot, String[][] traductions, boolean estTechnique) {
	    if (estTechnique) {
	        mots[taille] = new MotTechnique(mot, traductions);
	    } else {
	        String[] traductionsSimples = new String[traductions.length];
	        for (int i = 0; i < traductions.length; i++) {
	            traductionsSimples[i] = traductions[i][0];
	        }
	        mots[taille] = new MotSimple(mot, traductionsSimples);
	    }
	    taille++;
	}


	
	
	
	public String rechercherTraduction(String mot, int langueIndex) {
        for (int i = 0; i < taille; i++) {
            if (mots[i].getMot().equals(mot)) {
                return mots[i].rechercherTraduction(langueIndex);
            }
        }
        return "Mot non trouvé";
    }
	
	
	public void afficherDictionnaire() {
        if (taille == 0) {
            System.out.println("Le dictionnaire est vide.");
        } else {
            for (int i = 0; i < taille; i++) {
                System.out.println("Mot: " + mots[i].getMot());
                mots[i].afficherTraductions();  
                System.out.println("---------------");
            }
        }
    }
	
}